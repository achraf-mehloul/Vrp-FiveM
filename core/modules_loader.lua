local ModulesLoader = {
    loadedModules = {},
    moduleCallbacks = {},
    moduleDependencies = {},
    moduleStates = {}
}

function ModulesLoader:init()
    print('^2[Core] âš¡ Ø¬Ø§Ø±ÙŠ ØªØ­Ù…ÙŠÙ„ Ø§Ù„Ù†ÙˆØ§Ø© Ø§Ù„Ø£Ø³Ø§Ø³ÙŠØ©...^0')
    
    -- ØªØ­Ù…ÙŠÙ„ Ø§Ù„Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª
    self:loadConfigurations()
    
    -- Ø¥Ø¹Ø¯Ø§Ø¯ Ù‚Ø§Ø¹Ø¯Ø© Ø§Ù„Ø¨ÙŠØ§Ù†Ø§Øª
    self:setupDatabase()
    
    -- ØªÙ‡ÙŠØ¦Ø© Ø£Ù†Ø¸Ù…Ø© Ø§Ù„Ø£Ù…Ø§Ù†
    self:initSecuritySystems()
    
    -- ØªØ­Ù…ÙŠÙ„ Ø¬Ù…ÙŠØ¹ Ø§Ù„Ù…ÙˆØ¯Ø§Øª
    self:loadAllModules()
    
    -- Ø¨Ø¯Ø¡ Ù…Ø±Ø§Ù‚Ø¨Ø© Ø§Ù„Ø£Ø¯Ø§Ø¡
    self:startPerformanceMonitor()
    
    print('^2[Core] âœ… ØªÙ… ØªØ­Ù…ÙŠÙ„ Ø§Ù„Ù†ÙˆØ§Ø© Ø§Ù„Ø£Ø³Ø§Ø³ÙŠØ© Ø¨Ù†Ø¬Ø§Ø­!^0')
    print('^2[Core] ðŸ“¦ Ø¹Ø¯Ø¯ Ø§Ù„Ù…ÙˆØ¯Ø§Øª Ø§Ù„Ù…Ø­Ù…Ù„Ø©: ' .. countTable(self.loadedModules) .. '^0')
end

function ModulesLoader:loadConfigurations()
    self.config = {
        server = require 'core/config/server_config',
        client = require 'core/config/client_config',
        modules = require 'core/config/modules_config',
        hud = require 'core/config/hud_config'
    }
    
    -- ØªØ·Ø¨ÙŠÙ‚ Ø§Ù„Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª
    self:applyConfigurations()
end

function ModulesLoader:applyConfigurations()
    -- ØªØ·Ø¨ÙŠÙ‚ Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª Ø§Ù„Ø£Ø¯Ø§Ø¡
    if self.config.server.Performance then
        self:applyPerformanceSettings(self.config.server.Performance)
    end
    
    -- ØªØ·Ø¨ÙŠÙ‚ Ø¥Ø¹Ø¯Ø§Ø¯Ø§Øª Ø§Ù„Ø£Ù…Ø§Ù†
    if self.config.server.Security then
        self:applySecuritySettings(self.config.server.Security)
    end
end

function ModulesLoader:applyPerformanceSettings(settings)
    SetRoutingBucketEntityLockdownMode(0, 'strict')
    Set
